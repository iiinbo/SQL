/* 20230323 */
--데이터베이스 버전 정보 확인하기
SELECT *
FROM v$version;

--
SELECT *
FROM v$option
WHERE VALUE = 'TRUE';

/* 트렌젝션 처리 : 의미. 최소 단위로 SQL을 실행한다는 의미. */
--테이블 먼저 만들기
CREATE TABLE DEPT_TCL
AS SELECT * FROM DEPT;

--테이블 전체조회
SELECT * FROM DEPT_TCL;

--INSERT : 부서 50번 삽입
INSERT INTO DEPT_TCL
	VALUES (50, 'DATABASE', 'SEOUL');

--UPDATE 
UPDATE DEPT_TCL 
SET LOC = 'BUSAN'
WHERE DEPTNO = 40; --보스턴지사를 부산지역으로 변경

ROLLBACK; --CREATE / INSERT / UPDATE -> ROLLBACK -> INSERT하기 전으로 돌아감.

DELETE 
FROM DEPT_TCL 
WHERE DNAME = 'RESEARCH' ; --삭제완료

/* LOCK : 작업 중인 데이터가 있는 경우, *커밋이나 롤백* 완료 전까지 잠김 상태  */
UPDATE DEPT_TCL 
SET LOC = 'DAEGU'
WHERE DEPTNO = 30;

SELECT *
FROM EMP;

-- 튜닝 전
SELECT * FROM EMP
WHERE SUBSTR(EMPNO, 1, 2) = 75 --EMPNO가 첫번째(1) 자리부터 (2)까지 75인 넘버
AND LENGTH(EMPNO) = 4; --EMPNO 길이는 4인거 가져와줘
-- 튜닝 후
SELECT * FROM EMP
WHERE EMPNO BETWEEN 7500 AND 7600
;
 -- 튜닝 전
SELECT * 
FROM EMP 
WHERE ENAME || '' || JOB = 'WARD SALESMAN';
-- 튜닝 후
SELECT * 
FROM EMP
WHERE ENAME = 'WARD'
AND JOB = 'SALESMAN'
;
-- 튜닝 전
SELECT DISTINCT E.EMPNO, E.ENAME, M.DEPTNO	-- M테이블과 붙였을 때 ! 중복 제거 작업을 실행
FROM EMP E JOIN DEPT M 
ON (E.DEPTNO = M.DEPTNO)
;
-- 튜닝 후
SELECT E.EMPNO, E.ENAME, M.DEPTNO
FROM EMP E JOIN DEPT M
ON (E.DEPTNO = M.DEPTNO)
;
-- 전
SELECT * FROM EMP 
WHERE DEPTNO = '10'
UNION
SELECT * FROM EMP 
WHERE DEPTNO = '20'
;
-- 후
SELECT * FROM EMP 
WHERE DEPTNO = 10
UNION ALL
SELECT * FROM EMP 
WHERE DEPTNO = 20
;
-- 전
SELECT ENAME, EMPNO , SUM(SAL)
FROM EMP
GROUP BY ENAME, EMPNO
;
-- 후
SELECT EMPNO, ENAME, SUM(SAL)
FROM EMP
GROUP BY EMPNO, ENAME
;
-- 전
SELECT EMPNO, ENAME FROM EMP
WHERE TO_CHAR(HIREDATE, 'YYYYMMDD') LIKE '1981%'
AND EMPNO > 7700
;
-- 후
SELECT EMPNO, ENAME FROM EMP
WHERE EXTRACT(YEAR FROM HIREDATE) = 1981 AND
EMPNO > 7700
;

--INDEX 확인 및 추가
SELECT JOB, SUM(SAL) --GROUP BY 함수가 필요하다.
FROM EMP 
GROUP BY JOB; --집계 함수가 필요하다.

--설정한 INDEX 리스트 출력
SELECT *
FROM USER_INDEXS 
WHERE TABLE_NAME LIKE ('EMP');

DROP INDEX IDX_EMP_JOB ;

SELECT *
FROM IDX_EMP_JOB;

CREATE INDEX IDX_EMP_JOB
	ON EMP (JOB) ;
	
--집계함수 사용할 때 최대한 인덱스가 설정된 컬럼을 우선 사용
SELECT JOB
		, SUM(SAL) AS SUM_OF_SAL
FROM EMP 
GROUP BY JOB 
ORDER BY SUM_OF_SAL DESC ;
--
SELECT DEPTNO,
		,COUNT(EMPNO) 
FROM EMP 
GROUP BY GROUPING SET  (DEPTNO, JOB)
ORDER BY DEPTNO, JOB
;
